# min_element.s 
.text
min_element:               # ответ будет содержаться в a1
.globl min_element         # требования: a0 содержит длину массива, a1 содержит адрес первого элемента массива

       addi a0,a0,-1       # отнимает 1 от длины массива
       lw a3, 0(a1)        # загружаем в a3 значение первого элемента
       addi a1,a1,4        # создаем адрес следующего элемента

loop:                      # начало цикла
       beqz a0, return     # если a0 = 0 то выходим из цикла и завершаем выполнение программы
       lw a4, 0(a1)        # записываем в a4 значение текущего элемента массива
       addi a0,a0,-1       # отнимаем от длины массива 1
       bltu a4, a3, new_min# если a4 < a3 то записываем новый минимальный элемент массива
       addi a1,a1,4        # создаем адрес следующего элемента
       jal zero, loop      # переход в начало цикла
       
new_min:                   # запись нового минимального элемента массива
       lw a3, 0(a1)        # записываем в a3 текущий элемент массива
       addi a1, a1, 4      # создаем адрес следующего элемента
       jal zero,loop       # переход в начало цикла

return:
       mv a1, a3
       li a0, 0
       ret